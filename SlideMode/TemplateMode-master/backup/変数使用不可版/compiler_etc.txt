import javax.tools.JavaCompiler;
import javax.tools.ToolProvider;
import java.io.File;
import java.lang.reflect.*;
import java.net.URL;
import java.net.URLClassLoader;

String targetClass = "TempPApplet";
String targetMethod = "draw";
String targetFile, targetFolder;
JavaCompiler compiler;
ClassLoader loader;
PApplet apapapapapa;

class MirrorThread extends Thread {
  PApplet thisapapapapapa;
  boolean running=true;
  MirrorThread(PApplet apapapapapa) {
    thisapapapapapa=apapapapapa;
  }
  void run() {
    while (running) {
      try {
        int ret = compiler.run(null, null, null,
        new String[] {
          targetFile
        }
        );
        if (ret == 0) {
          loader = URLClassLoader.newInstance(
          new URL[] {
            new File(targetFolder).toURI().toURL()
          }
          ,
          this.getClass().getClassLoader());
          Class<?> clazz = Class.forName(targetClass, true, loader);
          if (clazz != null) {
            Method method = clazz.getMethod(targetMethod);
            Object instance=clazz.newInstance();
            clazz.getField("apa").set(instance, apapapapapa);
            apapapapapa=(PApplet)instance;
            clazz.getField("g").set(apapapapapa, g);
            clazz.getField("width").set(apapapapapa, width);
            clazz.getField("height").set(apapapapapa, height);
            clazz.getField("displayWidth").set(apapapapapa, width);
            clazz.getField("displayHeight").set(apapapapapa, height);
            clazz.getField("sketchPath").set(apapapapapa, sketchPath);
          }
        }
      }
      catch(Exception e) {
        e.printStackTrace();
      }
      try{
        Thread.sleep(99);
      }catch(Exception e) {
        e.printStackTrace();
      }
    }
  }
}
